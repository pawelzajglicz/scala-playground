[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Pawel\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Pawel\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 129.603ms
[debug]       Load.loadUnit: defsScala took 0.2931ms
[debug] [Loading] Scanning directory C:\Users\Pawel\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Pawel\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.3074 ms
[debug]           Load.resolveProject(global-plugins) took 43.7706ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Pawel\.sbt\1.0\plugins, plugins: List(<none>))) took 92.3485ms
[debug] [Loading] Done in C:\Users\Pawel\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 112.0599ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2408ms
[debug]     Load.loadUnit(file:/C:/Users/Pawel/.sbt/1.0/plugins/, ...) took 249.6608ms
[debug]   Load.apply: load took 407.6115ms
[debug]   Load.apply: resolveProjects took 4.9673ms
[debug]   Load.apply: finalTransforms took 44.8928ms
[debug]   Load.apply: config.delegates took 8.7102ms
[debug]   Load.apply: Def.make(settings)... took 2341.6139ms
[debug]   Load.apply: structureIndex took 146.4442ms
[debug]   Load.apply: mkStreams took 2.2826ms
[info] loading global plugins from C:\Users\Pawel\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6282.9764ms
[debug]           Load.loadUnit: plugins took 57.7221ms
[debug]           Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory D:\repos\scala-playground\scala-playground\akka-essentials\project
[debug]             Load.loadUnit: mkEval took 14.2116ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\repos\scala-playground\scala-playground\akka-essentials\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1007 ms
[info] loading settings for project akka-essentials-build from idea.sbt ...
[debug]               Load.resolveProject(akka-essentials-build) took 8.7147ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akka-essentials-build, base: D:\repos\scala-playground\scala-playground\akka-essentials\project, plugins: List(<none>))) took 11.3634ms
[debug] [Loading] Done in D:\repos\scala-playground\scala-playground\akka-essentials\project, returning: (akka-essentials-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2931.1791ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2322ms
[debug]         Load.loadUnit(file:/D:/repos/scala-playground/scala-playground/akka-essentials/project/, ...) took 2993.4096ms
[debug]       Load.apply: load took 2994.7539ms
[debug]       Load.apply: resolveProjects took 0.0855ms
[debug]       Load.apply: finalTransforms took 10.0808ms
[debug]       Load.apply: config.delegates took 0.4769ms
[debug]       Load.apply: Def.make(settings)... took 58.2914ms
[debug]       Load.apply: structureIndex took 19.5079ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from D:\repos\scala-playground\scala-playground\akka-essentials\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4546.817ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory D:\repos\scala-playground\scala-playground\akka-essentials
[debug]       Load.loadUnit: mkEval took 0.298ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\repos\scala-playground\scala-playground\akka-essentials, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1092 ms
[info] loading settings for project akka-essentials from build.sbt ...
[debug]         Load.resolveProject(akka-essentials) took 39.1704ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akka-essentials, base: D:\repos\scala-playground\scala-playground\akka-essentials, plugins: List(<none>))) took 42.7267ms
[debug] [Loading] Done in D:\repos\scala-playground\scala-playground\akka-essentials, returning: (akka-essentials)
[debug]     Load.loadUnit: loadedProjectsRaw took 1219.7298ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7308ms
[debug]   Load.loadUnit(file:/D:/repos/scala-playground/scala-playground/akka-essentials/, ...) took 5776.0685ms
[debug] Load.apply: load took 5778.7214ms
[debug] Load.apply: resolveProjects took 0.1032ms
[debug] Load.apply: finalTransforms took 20.3778ms
[debug] Load.apply: config.delegates took 0.4315ms
[debug] Load.apply: Def.make(settings)... took 90.397ms
[debug] Load.apply: structureIndex took 28.0558ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to akka-essentials (in build file:/D:/repos/scala-playground/scala-playground/akka-essentials/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 14052 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 14052, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-essentials (in build file:/D:/repos/scala-playground/scala-playground/akka-essentials/)
[debug] > Exec(idea-shell, None, None)
